# Token Ct
type TokenCt {
  token: String
  time: String
}

# Definicion para el catalogo de productos CT
type ResponseCtsStockProducts {
  precio: Float
  moneda: String
  almacenes: [Almacenes]
  codigo: String
}

type ResponseCtsExistenciaProduct {
  key: String
  existencia: Int
}

type Almacenes {
  promocion: Promocion
  almacenPromocion: [AlmacenDinamico!]!
}

type AlmacenDinamico {
  key: String!
  value: Int!
  promocionString: String
}

type Promocion {
  precio: Float
  vigente: Vigencia
}

type Vigencia {
  ini: String
  fin: String
}

type ResponseSupplierProd {
  idProveedor: ID
  codigo: String
  price: Float
  cantidad: Int
  sale_price: Float
  moneda: String
  branchOffices: [BranchOffices]
  category: Categorys
  subCategory: Categorys
}

# Fin Productos Ct

interface ResponseCt {
  codigo: String
  mensaje: String
  referencia: String
}

type ErroresCts {
  errorCode: String
  errorMessage: String
  errorReference: String
}

# Shipping CT
type ProductShipmentCT {
  producto: String
  cantidad: Int
  precio: Float
  moneda: String
  almacen: String
}

type ResponseCtsShipping implements ResponseCt { 
  codigo: String
  mensaje: String
  referencia: String
  respuesta: ResponseCtShippments
}

type ResponseCtShippments {
  cotizaciones: [CotizacionesCt]
  errores: [ErroresCts]
}

type CotizacionesCt {
  empresa: String
  total: Float
  metodo: String
}

# Orders CT
# type ResponseCtsOrders implements ResponseCt { 
#   codigo: String
#   mensaje: String
#   referencia: String
#   respuesta: ResponseCtOrder
# }

type ResponseCtOrder {
  pedidoWeb: String
  fecha: String
  tipoDeCambio: Float
  estatus: String
  errores: [ErroresCts]
}

# Confirm Order Ct
type ResponseCtsConfirOrder {
  okCode: Int,
  okMessage: String,
  okReference: String
}

# List Orders Ct
type ResponseCtsListOrders {
  idPedido: String
  almacen: String
  tipoPago: String
  guiaConnect: GuiaConnect
  envio: [EnvioCt]
  productoCt: [ProductCt]
  respuestaCT: ResponseListOrdersCt
}

type GuiaConnect {
  generarGuia: Boolean
  paqueteria: String
}

type EnvioCt {
  nombre: String
  direccion: String
  entreCalles: String
  noExterior: String
  noInterior: String
  colonia: String
  estado: String
  ciudad: String
  codigoPostal: String
  telefono: Float
}

type ProductCt {
  cantidad: String
  clave: String
  precio: Float
  moneda: String
}

type ResponseListOrdersCt {
  pedidoWeb: String
  fecha: String
  tipoDeCambio: Float
  estatus: String
  errores: [ErroresCts]
}

# Status Order Ct
type ResponseCtsStatus {
  status: String
  folio: String
  guias: [GuiasCt]
}

type GuiasCt {
  guia: String
  paqueteria: String
  direccion: String
  archivo: String
}

# Volumen de Productos CT
type ResponseCtsVolProduct {
  peso: Float
  largo: Float
  alto: Float
  ancho: Float
  UPC: String
  EAN: String
}

#Json de Productos
type Existencia {
  HMO: Int
  OBR: Int
  LMO: Int
  CLN: Int
  DGO: Int
  TRN: Int
  CHI: Int
  AGS: Int
  QRO: Int
  SLP: Int
  LEO: Int
  GDL: Int
  MOR: Int
  SLT: Int
  XLP: Int
  VER: Int
  COL: Int
  CTZ: Int
  TAM: Int
  PUE: Int
  VHA: Int
  TXA: Int
  MTY: Int
  TPC: Int
  MID: Int
  OAX: Int
  MAZ: Int
  CUE: Int
  TOL: Int
  PAC: Int
  CUN: Int
  DFP: Int
  DFA: Int
  ZAC: Int
  DFT: Int
  ACA: Int
  IRA: Int
  DFC: Int
  TXL: Int
  CAM: Int
  ACX: Int
  URP: Int
  CDV: Int
  CEL: Int
  D2A: Int
  CMT: Int
}

type Especificacion {
  tipo: String
  valor: String
}

type Vigencia {
  inicio: String
  fin: String
}

type Promocion {
  tipo: String
  promocion: Float
  vigencia: Vigencia
}

type ResponseCtsJsonProducts {
  idProducto: Int
  clave: String
  numParte: String
  nombre: String
  modelo: String
  idMarca: Int
  marca: String
  idSubCategoria: Int
  subcategoria: String
  idCategoria: Int
  categoria: String
  descripcion_corta: String
  ean: String
  upc: String
  sustituto: String
  activo: Int
  protegido: Int
  existencia: Existencia
  precio: Float
  moneda: String
  tipoCambio: Float
  especificaciones: [Especificacion]
  promociones: [Promocion]
  imagen: String
}
